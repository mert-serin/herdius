// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MaxRequest struct {
	Val                  int32    `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaxRequest) Reset()         { *m = MaxRequest{} }
func (m *MaxRequest) String() string { return proto.CompactTextString(m) }
func (*MaxRequest) ProtoMessage()    {}
func (*MaxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *MaxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaxRequest.Unmarshal(m, b)
}
func (m *MaxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaxRequest.Marshal(b, m, deterministic)
}
func (m *MaxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaxRequest.Merge(m, src)
}
func (m *MaxRequest) XXX_Size() int {
	return xxx_messageInfo_MaxRequest.Size(m)
}
func (m *MaxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MaxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MaxRequest proto.InternalMessageInfo

func (m *MaxRequest) GetVal() int32 {
	if m != nil {
		return m.Val
	}
	return 0
}

type MaxResponse struct {
	Val                  int32    `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaxResponse) Reset()         { *m = MaxResponse{} }
func (m *MaxResponse) String() string { return proto.CompactTextString(m) }
func (*MaxResponse) ProtoMessage()    {}
func (*MaxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *MaxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaxResponse.Unmarshal(m, b)
}
func (m *MaxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaxResponse.Marshal(b, m, deterministic)
}
func (m *MaxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaxResponse.Merge(m, src)
}
func (m *MaxResponse) XXX_Size() int {
	return xxx_messageInfo_MaxResponse.Size(m)
}
func (m *MaxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MaxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MaxResponse proto.InternalMessageInfo

func (m *MaxResponse) GetVal() int32 {
	if m != nil {
		return m.Val
	}
	return 0
}

func init() {
	proto.RegisterType((*MaxRequest)(nil), "proto.MaxRequest")
	proto.RegisterType((*MaxResponse)(nil), "proto.MaxResponse")
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7) }

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 136 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x72, 0x5c, 0x5c,
	0xbe, 0x89, 0x15, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x02, 0x5c, 0xcc, 0x65, 0x89,
	0x39, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x20, 0xa6, 0x92, 0x3c, 0x17, 0x37, 0x58, 0xbe,
	0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x15, 0x53, 0x81, 0x91, 0x07, 0x17, 0xaf, 0x47, 0x6a, 0x51, 0x4a,
	0x66, 0x69, 0x71, 0x30, 0xd8, 0x78, 0x21, 0x73, 0x2e, 0x0e, 0xe7, 0x8c, 0xd4, 0xe4, 0x6c, 0xdf,
	0xc4, 0x0a, 0x21, 0x41, 0x88, 0x65, 0x7a, 0x08, 0x2b, 0xa4, 0x84, 0x90, 0x85, 0x20, 0xa6, 0x2a,
	0x31, 0x68, 0x30, 0x1a, 0x30, 0x26, 0xb1, 0x81, 0x25, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x80, 0xf9, 0xb7, 0x96, 0xa8, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HerdiusServerClient is the client API for HerdiusServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HerdiusServerClient interface {
	// Sends a greeting
	CheckMax(ctx context.Context, opts ...grpc.CallOption) (HerdiusServer_CheckMaxClient, error)
}

type herdiusServerClient struct {
	cc *grpc.ClientConn
}

func NewHerdiusServerClient(cc *grpc.ClientConn) HerdiusServerClient {
	return &herdiusServerClient{cc}
}

func (c *herdiusServerClient) CheckMax(ctx context.Context, opts ...grpc.CallOption) (HerdiusServer_CheckMaxClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HerdiusServer_serviceDesc.Streams[0], "/proto.HerdiusServer/CheckMax", opts...)
	if err != nil {
		return nil, err
	}
	x := &herdiusServerCheckMaxClient{stream}
	return x, nil
}

type HerdiusServer_CheckMaxClient interface {
	Send(*MaxRequest) error
	Recv() (*MaxResponse, error)
	grpc.ClientStream
}

type herdiusServerCheckMaxClient struct {
	grpc.ClientStream
}

func (x *herdiusServerCheckMaxClient) Send(m *MaxRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *herdiusServerCheckMaxClient) Recv() (*MaxResponse, error) {
	m := new(MaxResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// HerdiusServerServer is the server API for HerdiusServer service.
type HerdiusServerServer interface {
	// Sends a greeting
	CheckMax(HerdiusServer_CheckMaxServer) error
}

func RegisterHerdiusServerServer(s *grpc.Server, srv HerdiusServerServer) {
	s.RegisterService(&_HerdiusServer_serviceDesc, srv)
}

func _HerdiusServer_CheckMax_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HerdiusServerServer).CheckMax(&herdiusServerCheckMaxServer{stream})
}

type HerdiusServer_CheckMaxServer interface {
	Send(*MaxResponse) error
	Recv() (*MaxRequest, error)
	grpc.ServerStream
}

type herdiusServerCheckMaxServer struct {
	grpc.ServerStream
}

func (x *herdiusServerCheckMaxServer) Send(m *MaxResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *herdiusServerCheckMaxServer) Recv() (*MaxRequest, error) {
	m := new(MaxRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _HerdiusServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.HerdiusServer",
	HandlerType: (*HerdiusServerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CheckMax",
			Handler:       _HerdiusServer_CheckMax_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "server.proto",
}
